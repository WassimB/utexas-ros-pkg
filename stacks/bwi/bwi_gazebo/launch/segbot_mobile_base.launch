<launch>

  <arg name="world" default="ens32_world" />
  <arg name="map_frame" default="map" />
  <arg name="map_topic" default="/map" />
  <arg name="map_namespace" default="" />
  <arg name="x" default="5" />
  <arg name="y" default="5" />
  <arg name="robotid" default="segbot" />
  <arg name="tf_prefix" default="" />
  <arg name="has_tf_prefix" default="false" />
  <arg name="use_simple_gazebo_model" default="false" />

  <!-- whether to launch autonomous stuff or not -->
  <arg name="launch_localization" default="false" />
  <arg name="use_fake_localization" default="false" />
  <arg name="launch_move_base" default="false" />
  <arg name="launch_gmapping" default="false" />

  <!-- enable tf_prefix if not in root level namespace -->
  <group if="$(arg has_tf_prefix)">
    <param name="tf_prefix" value="$(arg tf_prefix)" />
  </group>

  <!-- launch robot description and robot internal tf tree -->
  <include file="$(find segbot_description)/launch/segbot_description_tf.launch">
    <arg name="use_simple_gazebo_model" value="$(arg use_simple_gazebo_model)" />
    <arg name="tf_prefix" value="$(arg tf_prefix)" />
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_robot" pkg="gazebo" type="spawn_model"
    args="-param robot_description
    -urdf
    -x $(arg x)
    -y $(arg y)
    -z 0
    -model $(arg robotid)
    -gazebo_namespace /$(arg world)"
    respawn="false" output="screen">
  </node>

  <!-- nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="openni_manager"  args="manager"/> 

  <!-- throttling -->
  <node pkg="nodelet" type="nodelet" name="pointcloud_throttle" args="load pointcloud_to_laserscan/CloudThrottle openni_manager" respawn="true">
    <param name="max_rate" value="20.0"/>
    <remap from="cloud_in" to="camera/depth/points"/>
    <remap from="cloud_out" to="cloud_throttled"/>
  </node>

  <!-- Fake Laser -->
  <node pkg="nodelet" type="nodelet" name="kinect_laser" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true">
    <param name="output_frame_id" value="camera_depth_frame"/>
    <!-- heights are in the (optical?) frame of the kinect -->
    <param name="min_height" value="-0.15"/>
    <param name="max_height" value="0.15"/>
    <remap from="cloud" to="cloud_throttled"/>
  </node>

  <!-- Fake Laser (narrow one, for localization -->
  <node pkg="nodelet" type="nodelet" name="kinect_laser_narrow" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true">
    <param name="output_frame_id" value="camera_depth_frame"/>
    <!-- heights are in the (optical?) frame of the kinect -->
    <param name="min_height" value="-0.025"/>
    <param name="max_height" value="0.025"/>
    <remap from="cloud" to="cloud_throttled"/>
    <remap from="scan" to="narrow_scan"/>
  </node>

  <!-- launch localization -->
  <group if="$(arg launch_localization)">
    <group if="$(arg has_tf_prefix)">
    <node name="map_tf_provider" pkg="tf" type="static_transform_publisher"
      args="0 0 0 0 0 0 /$(arg map_frame) $(arg map_frame) 200" /> 
    </group>
    <group unless="$(arg use_fake_localization)">
      <include file="$(find segbot_navigation)/launch/amcl.launch">
        <arg name="initial_pose_x" value="$(arg x)" />
        <arg name="initial_pose_y" value="$(arg y)" />
        <arg name="map_namespace" value="$(arg map_namespace)" />
      </include>
    </group>
    <group if="$(arg use_fake_localization)">
      <node name="fake_amcl" pkg="bwi_gazebo" type="fake_amcl">
        <param name="frame_id" value="$(arg map_frame)"/>
      </node>
    </group>
  </group>

  <!-- launch gmapping -->
  <group if="$(arg launch_gmapping)">
    <include file="$(find segbot_navigation)/launch/gmapping.launch" />
  </group>

  <!-- launch move base -->
  <group if="$(arg launch_move_base)">
    <include file="$(find segbot_navigation)/launch/move_base.launch">
      <arg name="map_topic" value="$(arg map_topic)" />
    </include>
  </group>

</launch>
