<launch>

  <arg name="world" default="ens32_world" />
  <arg name="map_name_1" default="ens1" />
  <arg name="map_file_1" default="$(find bwi_gazebo)/maps/ens-basement-2012-09-04-simulation-1.yaml"/>
  <arg name="map_name_2" default="ens2" />
  <arg name="map_file_2" default="$(find bwi_gazebo)/maps/ens-basement-2012-09-04-simulation-2.yaml"/>

  <!-- Start the world -->
  <include file="$(find bwi_gazebo)/launch/ens32_world.launch">
    <arg name="world" value="$(arg world)" />
  </include>

  <!-- Start the bwi map server with the ens split map specifications-->
  <node name="bwi_map_server" pkg="bwi_apps" type="bwi_map_server">
    <param name="maps/$(arg map_name_1)/yaml" value="$(arg map_file_1)" />
    <rosparam param="maps/$(arg map_name_1)/origin">[0, 0, 0, 0, 0, 0]</rosparam>
    <param name="maps/$(arg map_name_2)/yaml" value="$(arg map_file_2)" />
    <rosparam param="maps/$(arg map_name_2)/origin">[27.5, 0, 0, 0, 0, 0]</rosparam>
    <rosparam param="links">[{from_point: {level_name: ens1, point: [8, 0.5, 0]}, to_point: {level_name: ens2, point: [-9, 0.5, 0]}}]</rosparam>
  </node>

  <!-- Spawn first robot -->
  <arg name="robot1_ns" default="segbot1" />
  <include ns="$(arg robot1_ns)" file="$(find bwi_gazebo)/launch/fake_localization_segbot.launch">
    <arg name="launch_world" value="false" />
    <arg name="world" default="ens32_world" />
    <arg name="start_x" value="5" />
    <arg name="start_y" value="5" />
    <arg name="robotid" value="$(arg robot1_ns)" />
    <arg name="tf_prefix" value="$(arg robot1_ns)" />
    <arg name="has_tf_prefix" value="true" />
    <arg name="map_frame" value="$(arg map_name_1)/map" />
    <arg name="map_topic" value="/$(arg map_name_1)/map" />
  </include>

  <!-- Spawn second robot -->
  <arg name="robot2_ns" default="segbot2" />
  <include ns="$(arg robot2_ns)" file="$(find bwi_gazebo)/launch/fake_localization_segbot.launch">
    <arg name="launch_world" value="false" />
    <arg name="world" default="ens32_world" />
    <arg name="start_x" value="20" />
    <arg name="start_y" value="5" />
    <arg name="robotid" value="$(arg robot2_ns)" />
    <arg name="tf_prefix" value="$(arg robot2_ns)" />
    <arg name="has_tf_prefix" value="true" />
    <arg name="map_frame" value="$(arg map_name_2)/map" />
    <arg name="map_topic" value="/$(arg map_name_2)/map" />
  </include>

  <!-- Spawn a controllable person -->
  <arg name="person1_ns" default="person1" />
  <include ns="$(arg person1_ns)" file="$(find bwi_gazebo)/launch/person.launch">
    <arg name="world" default="ens32_world" />
    <arg name="x" value="10" />
    <arg name="y" value="5" />
    <arg name="personid" value="$(arg person1_ns)" />
    <arg name="tf_prefix" value="$(arg person1_ns)" />
    <arg name="has_tf_prefix" value="true" />
  </include>

  <!-- Spawn the person controller -->
  <group ns="$(arg person1_ns)">
    <node name="person_controller" pkg="bwi_person_controller" type="bwi_person_controller">
      <param name="id" value="$(arg person1_ns)" />
    </node>
  </group>

  <!-- Aggregate person locations (i.e. the fake person location provider) -->
  <node name="fake_person_location_system" pkg="bwi_apps" type="person_location_aggregator" output="screen">
    <param name="persons/person1" value="/person1/location" />
  </node>

  <!-- Aggregate robot locations from tf tree -->
  <node name="robot_location_aggregator" pkg="bwi_apps" type="robot_location_aggregator">
    <param name="robot_list_file" value="$(find bwi_apps)/config/robots.yaml" />
  </node>

  <!-- Start the path planner -->
  <node name="path_provider" pkg="bwi_apps" type="path_provider" />

  <!-- Start BWI Navigator -->
  <node name="bwi_navigator" pkg="bwi_apps" type="bwi_navigator">
    <param name="robot_list/ens1" value="segbot1" />
    <param name="robot_list/ens2" value="segbot2" />
  </node>

</launch>
